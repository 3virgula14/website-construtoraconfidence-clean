---
export const {startsOpen} = Astro.props || {startsOpen: false}
---

<object type="image/svg+xml" data="/favicon.svg" id="wrapper">
</object>

<nav class="navbar" role="navigation" aria-label="main navigation">
	<div id="navbarBasicExample" class="navbar-menu">
		<div class="navbar-start">
		  <a class="navbar-item" href="/">
			Início
		  </a>
	
		  <a class="navbar-item" href="/portfolio">
			Portfólio
		  </a>

		  <a class="navbar-item" href="/sobre">
			Sobre
		  </a>
		</div>
	</div>
</nav>

<style>
:root{
    --base-laranja: #e36a13
}

#wrapper {
    background: linear-gradient(90deg, rgba(248,132,49,1) 100%, rgba(255,164,99,1) 0%);
    position: sticky;
    transform-origin: top left;
    width: 100vw;
    height: 100vh;
	top: 0px;
	left: 0px;
	z-index: 10000;
}
.navbar{
	position: sticky;
	margin-top: -60px;
	float: right;
	background-color: transparent;
	top: 10px;
	right: 15px;
	z-index: 19999;
}
.navbar-link, a.navbar-item:hover{
	background-color: transparent;
	color: rgb(255, 179, 124);
}
</style>
<script>
	import {startsOpen} from './Nav.astro';
	
	window.addEventListener('load', () => {
		//construction
	let tl = gsap.timeline()
	const abdunctedTspanContent = "Confidence website"
	const expandedTspanContent = "CONFIDENCE"
  
	const LogoComponent = () => {
		let wrapper = document.querySelector("#wrapper");
		
		let all = wrapper.querySelectorAll("svg > *");
		all.forEach(el => {
			el.style.opacity = 0
		})
	
		let content = wrapper.contentDocument.querySelector("#content");
		content.style.opacity = 0;
		content.style.cursor = "pointer";
		content.style.transformOrigin = "center 40%"
	
		let construtora = wrapper.contentDocument.querySelector("#construtora");
		let confidence = wrapper.contentDocument.querySelector("#confidence");
		let construtoraTextContent = confidence.querySelector("tspan");
	
		//landing animations
		tl.to(content, {opacity: 1, duration: 0.7},  "+=0")
		tl.to(confidence, {opacity: 1, duration: 0.7}, 0.4)
		tl.to(construtora, {opacity: 1, duration: 0.4}, "<")


		
		let obj = {
			wrapper,
			svg: {
				all,
				content,
				logoName:{
					confidence,
					construtora,    
				}
			},
			abdunct: () => {
				let d = 0.2;
				obj.svg.content.removeEventListener('click', obj.abdunct);
				tl.to(wrapper, {clipPath: "polygon(0 0, 100% 0, 100% 9%, 0% 9%)" , duration: d*2});
				tl.to(obj.svg.content, {transform: "matrix(0.4, 0, 0, 0.4, -127.4, -20.42)", duration: d}, "<");
				tl.to(obj.svg.logoName.construtora, {opacity: 1, transform: "matrix(.3, 0, 0, .3, -114, -35)", duration: d}, "<");
				tl.to(obj.svg.logoName.confidence, {opacity: 1, transform: "matrix(.45, 0, 0, 0.45, -100, 11)", duration: d}, "<");
				tl.to(construtoraTextContent, {textContent: construtoraTextContent.textContent.replace(expandedTspanContent, abdunctedTspanContent), duration: d}, "<");
				obj.svg.content.addEventListener('click', obj.expand);
			},
			expand: () => {
				let d = 0.1;
				obj.svg.content.removeEventListener('click', obj.expand);
				tl.to(wrapper, {clipPath: "polygon(0 0, 100% 0, 100% 100%, 0% 100%)", duration: d*2});
				tl.to(obj.svg.content, {transform: "matrix(1, 0, 0, 1, 0, 0)", duration: d}, "<");
				tl.to(obj.svg.logoName.construtora, {opacity: 1, transform: "matrix(1, 0, 0, 1, 0, 0)", duration: d}, "<");
				tl.to(obj.svg.logoName.confidence, {opacity: 1, transform: "matrix(1.5, 0, 0, 1.5, 64, 157)", duration: d}, "<");
				setTimeout(() => construtoraTextContent.textContent = construtoraTextContent.textContent.replace(abdunctedTspanContent, expandedTspanContent), 150);
				obj.svg.content.addEventListener('click', obj.abdunct) 
			}
		}

		obj.svg.content.addEventListener('click', obj.abdunct);

		return obj
	}
	
	let logo = LogoComponent();
		
	if(!startsOpen) logo.abdunct()
	else  logo.expand()
		
	})
</script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.3/gsap.min.js" integrity="sha512-gmwBmiTVER57N3jYS3LinA9eb8aHrJua5iQD7yqYCKa5x6Jjc7VDVaEA0je0Lu0bP9j7tEjV3+1qUm6loO99Kw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
